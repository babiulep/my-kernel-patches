diff -rupN a/nvidia-drm/nvidia-drm-connector.c b/nvidia-drm/nvidia-drm-connector.c
--- a/nvidia-drm/nvidia-drm-connector.c 2025-04-01 13:37:05.000000000 +0200
+++ b/nvidia-drm/nvidia-drm-connector.c 2025-04-01 13:53:48.854398314 +0200
@@ -313,30 +313,6 @@ static int nv_drm_connector_get_modes(st
     return count;
 }
 
-static int nv_drm_connector_mode_valid(struct drm_connector    *connector,
-                                       struct drm_display_mode *mode)
-{
-    struct drm_device *dev = connector->dev;
-    struct nv_drm_device *nv_dev = to_nv_device(dev);
-    struct nv_drm_encoder *nv_detected_encoder =
-                           to_nv_connector(connector)->nv_detected_encoder;
-    struct NvKmsKapiDisplayMode displayMode;
-
-    if (nv_detected_encoder == NULL) {
-        return MODE_BAD;
-    }
-
-    drm_mode_to_nvkms_display_mode(mode, &displayMode);
-
-    if (!nvKms->validateDisplayMode(nv_dev->pDevice,
-                                    nv_detected_encoder->hDisplay,
-                                    &displayMode)) {
-        return MODE_BAD;
-    }
-
-    return MODE_OK;
-}
-
 static struct drm_encoder*
 nv_drm_connector_best_encoder(struct drm_connector *connector)
 {
@@ -463,7 +439,6 @@ __nv_drm_connector_atomic_check(struct d
 
 static const struct drm_connector_helper_funcs nv_connector_helper_funcs = {
     .get_modes    = nv_drm_connector_get_modes,
-    .mode_valid   = nv_drm_connector_mode_valid,
     .best_encoder = nv_drm_connector_best_encoder,
 #if defined(NV_DRM_CONNECTOR_ATTACH_HDR_OUTPUT_METADATA_PROPERTY_PRESENT)
     .atomic_check = __nv_drm_connector_atomic_check,
diff -rupN a/nvidia/nv.c b/nvidia/nv.c
--- a/nvidia/nv.c	2025-02-26 03:29:43.000000000 +0100
+++ b/nvidia/nv.c	2025-04-05 11:48:04.174491768 +0200
@@ -4096,7 +4096,7 @@ int NV_API_CALL nv_stop_rc_timer(
 
     nv_printf(NV_DBG_INFO, "NVRM: stopping rc timer\n");
     nv->rc_timer_enabled = 0;
-    del_timer_sync(&nvl->rc_timer.kernel_timer);
+    timer_delete_sync(&nvl->rc_timer.kernel_timer);
     nv_printf(NV_DBG_INFO, "NVRM: rc timer stopped\n");
 
     return 0;
@@ -4140,7 +4140,7 @@ void NV_API_CALL nv_stop_snapshot_timer(
     NV_SPIN_UNLOCK_IRQRESTORE(&nvl->snapshot_timer_lock, flags);
 
     if (timer_active)
-        del_timer_sync(&nvl->snapshot_timer.kernel_timer);
+        timer_delete_sync(&nvl->snapshot_timer.kernel_timer);
 }
 
 void NV_API_CALL nv_flush_snapshot_timer(void)
diff -rupN a/nvidia/nv-nano-timer.c b/nvidia/nv-nano-timer.c
--- a/nvidia/nv-nano-timer.c	2025-02-26 03:29:43.000000000 +0100
+++ b/nvidia/nv-nano-timer.c	2025-04-05 11:48:33.693337602 +0200
@@ -203,7 +203,7 @@ void NV_API_CALL nv_cancel_nano_timer(
 #if NV_NANO_TIMER_USE_HRTIMER
     hrtimer_cancel(&nv_nstimer->hr_timer);
 #else
-    del_timer_sync(&nv_nstimer->jiffy_timer);
+    timer_delete_sync(&nv_nstimer->jiffy_timer);
 #endif
 
 }
diff -rupN a/nvidia-drm/nvidia-drm-os-interface.c b/nvidia-drm/nvidia-drm-os-interface.c
--- a/nvidia-drm/nvidia-drm-os-interface.c	2025-02-26 02:42:10.000000000 +0100
+++ b/nvidia-drm/nvidia-drm-os-interface.c	2025-04-05 11:49:11.485313258 +0200
@@ -238,7 +238,7 @@ unsigned long nv_drm_timeout_from_ms(NvU
 
 bool nv_drm_del_timer_sync(nv_drm_timer *timer)
 {
-    if (del_timer_sync(&timer->kernel_timer)) {
+    if (timer_delete_sync(&timer->kernel_timer)) {
         return true;
     } else {
         return false;
diff -rupN a/nvidia-modeset/nvidia-modeset-linux.c b/nvidia-modeset/nvidia-modeset-linux.c
--- a/nvidia-modeset/nvidia-modeset-linux.c	2025-02-26 02:42:20.000000000 +0100
+++ b/nvidia-modeset/nvidia-modeset-linux.c	2025-04-05 11:49:45.653314949 +0200
@@ -738,7 +738,7 @@ static void nvkms_kthread_q_callback(voi
      * pending timers and than waiting for workqueue callbacks.
      */
     if (timer->kernel_timer_created) {
-        del_timer_sync(&timer->kernel_timer);
+        timer_delete_sync(&timer->kernel_timer);
     }
 
     /*
@@ -1922,7 +1922,7 @@ restart:
              * completion, and we wait for queue completion with
              * nv_kthread_q_stop below.
              */
-            if (del_timer_sync(&timer->kernel_timer) == 1) {
+            if (timer_delete_sync(&timer->kernel_timer) == 1) {
                 /*  We've deactivated timer so we need to clean after it */
                 list_del(&timer->timers_list);
 
